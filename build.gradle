buildscript {
	ext {
		springBootVersion = '1.4.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'


war {
	baseName = 'AGORA-SpatialDataService'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

configurations {
	providedRuntime
}

dependencies {	
 	compile group: 'postgresql', name: 'postgresql', version: '9.0-801.jdbc4'	
	compile group: 'org.springframework.data', name: 'spring-data-jpa', version: '1.10.5.RELEASE'
	compile group: 'org.hibernate', name: 'hibernate-core', version: '5.2.4.Final'	
	compile group: 'com.thetransactioncompany', name: 'cors-filter', version: '2.5'
	compile group: 'commons-codec', name: 'commons-codec', version: '1.9'
	compile group: 'commons-httpclient', name: 'commons-httpclient', version: '3.1'
	compile 'javax.servlet:javax.servlet-api:3.1.0'
	compile group: 'org.json', name: 'json', version: '20090211'	
	compile('org.springframework.boot:spring-boot-starter-web')	
	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}